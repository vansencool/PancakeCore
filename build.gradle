import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.5'
}

group = 'dev.vansen'
version = '1.0.0'

ext {
    paper = "1.21.3"
    commandUtils = "1.2.3"
}

repositories {
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.papermc.io/repository/maven-public/" }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:$paper-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'com.esotericsoftware:kryo:5.6.2'
    implementation "com.github.vansencool:CommandUtils:$commandUtils"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(21)
}

tasks.processResources {
    def props = [version: version]
    inputs.properties(props)
    filteringCharset = 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand(props)
    }
}

tasks.named('shadowJar', ShadowJar) {
    archiveClassifier.set('')
    mergeServiceFiles()
    configurations = [project.configurations.runtimeClasspath]
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
    minimize()
    def outputDir = System.getenv("BUILD_OUTPUT_DIR") ?: "build/libs"
    destinationDirectory.set(file(outputDir))
}

tasks.build {
    dependsOn(tasks.shadowJar)
}
